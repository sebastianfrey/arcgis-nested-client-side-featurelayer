import{dw as z,aU as G,bf as A,dx as D,dy as L,dz as E,dA as O,dB as U,c9 as V,dC as Z,dD as j}from"./index-BwifKPSf.js";import{Z as B}from"./utils-Bi-YUpRW.js";import{c as T,B as P}from"./utils-Bmh9imFy.js";let m=null;const R=/^(?<hh>([0-1][0-9])|([2][0-3])):(?<mm>[0-5][0-9])(:(?<ss>[0-5][0-9]))?([.](?<ms>\d+))?$/;function Y(t,e,o){return t.x<0?t.x+=e:t.x>o&&(t.x-=e),t}function q(t,e,o,r){const s=z(o)?G(o):null,u=s?Math.round((s.valid[1]-s.valid[0])/e.scale[0]):null;return t.map(i=>{const a=new A(i.geometry);return D(e,a,a,a.hasZ,a.hasM),i.geometry=s?Y(a,u??0,r[0]):a,i})}function H(t,e=18,o,r,s){const u=new Float64Array(r*s);e=Math.round(Z(e));let i=Number.POSITIVE_INFINITY,a=Number.NEGATIVE_INFINITY;const M=j(o);for(const{geometry:h,attributes:N}of t){const{x:$,y:c}=h,y=Math.max(0,$-e),g=Math.max(0,c-e),F=Math.min(s,c+e),I=Math.min(r,$+e),x=+M(N);for(let f=g;f<F;f++)for(let d=y;d<I;d++){const b=f*r+d,w=L(d-$,f-c,e)*x,l=u[b]+=w;i=Math.min(i,l),a=Math.max(a,l)}}return{min:i,max:a}}function _(t){const e=R.exec(t);if(!e)return null;const{hh:o,mm:r,ss:s,ms:u}=e.groups;return Number(o)*E.hours+Number(r)*E.minutes+Number(s)*E.seconds+Number(u||0)}async function J(t,e,o=!0){if(!e)return[];const{field:r,field2:s,field3:u,fieldDelimiter:i,fieldInfos:a,timeZone:M}=t,h=r&&(a==null?void 0:a.find(l=>l.name.toLowerCase()===r.toLowerCase())),N=!!h&&O(h),$=!!h&&B(h),c=t.valueExpression,y=t.normalizationType,g=t.normalizationField,F=t.normalizationTotal,I=[],x=t.viewInfoParams;let f=null,d=null;if(c){if(!m){const{arcadeUtils:l}=await U();m=l}m.hasGeometryOperations(c)&&await m.enableGeometryOperations(),f=m.createFunction(c),d=x?m.getViewInfo({viewingMode:x.viewingMode,scale:x.scale,spatialReference:new V(x.spatialReference)}):null}const b=t.fieldInfos,w=!(e[0]&&"declaredClass"in e[0]&&e[0].declaredClass==="esri.Graphic")&&b?{fields:b}:null;return e.forEach(l=>{const p=l.attributes;let n;if(c){const v=w?{...l,layer:w}:l,C=m.createExecContext(v,d,M);n=m.executeFunction(f,C)}else p&&(n=p[r],s?(n=`${T(n)}${i}${T(p[s])}`,u&&(n=`${n}${i}${T(p[u])}`)):typeof n=="string"&&o&&($?n=n?new Date(n).getTime():null:N&&(n=n?_(n):null)));if(y&&typeof n=="number"&&isFinite(n)){const v=p&&parseFloat(p[g]);n=P(n,y,v,F)}I.push(n)}),I}export{J as b,q as j,_ as w,H as x};
