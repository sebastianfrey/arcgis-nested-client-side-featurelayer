import{ae as s,ag as n,ak as d,am as u,aB as l}from"./index-DtvgboMu.js";import{X as g}from"./FeatureLayerView2D-BLURH97T.js";import"./EffectView-CS1B7I3R.js";import"./highlightReasons-28sxhZmS.js";import"./LayerView-DA-BUVh3.js";import"./scaleUtils-q67FUHY2.js";import"./Container-Dgy2EGqZ.js";import"./definitions-ChNTV7Fi.js";import"./enums-CYMvjYBC.js";import"./Texture-vVDGsXer.js";import"./TechniqueInstance-dzFgiWai.js";import"./UpdateTracking2D-C7hB6wxx.js";import"./TurboLine-BFZ12TtB.js";import"./enums-BRqP_wXA.js";import"./earcut-ZN7RV-xv.js";import"./GeometryUtils-Ck5gdtfJ.js";import"./OptimizedGeometry-DLPswkPy.js";import"./CIMSymbolHelper-BrOZkvNR.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-C0MR3i-b.js";import"./Rect-CUzevAry.js";import"./BoundingBox-C8300ugD.js";import"./LabelMetric-DxEVbplB.js";import"./Program-CNE3XrIi.js";import"./VertexElementDescriptor-BOD-G50G.js";import"./BindType-BmZEZMMh.js";import"./Util-DGndHPNF.js";import"./constants-D5zmR9t2.js";import"./TileContainer-BRJ54pB1.js";import"./WGLContainer-BXa170mH.js";import"./ProgramTemplate-DSHWlgD1.js";import"./StyleDefinition-pu9RBNlY.js";import"./config-MDUrh2eL.js";import"./featureConversionUtils-V8UKYvtu.js";import"./OptimizedFeature-CXeSoBCN.js";import"./OptimizedFeatureSet-Blu9Ckm7.js";import"./tileUtils-B7X19rIS.js";import"./featureReductionUtils-Caulfaw_.js";import"./SDFHelper-DGfDUAJH.js";import"./floatRGBA-CPX4r8ag.js";import"./FeatureCommandQueue-KRS7AXRW.js";import"./HighlightCounter-D4ZMRwzw.js";import"./floorFilterUtils-DZ5C6FQv.js";import"./popupUtils-DykJYbnt.js";import"./RefreshableLayerView-DVJbokvP.js";let i=class extends g{initialize(){this.addHandles([d(()=>this.view.scale,()=>this._update(),u)],"constructor")}isUpdating(){const t=this.layer.sublayers.some(a=>a.renderer!=null),r=this._commandsQueue.updateTracking.updating,o=this._updatingRequiredFieldsPromise!=null,p=!this._worker,m=this.dataUpdating,e=t&&(r||o||p||m);return l("esri-2d-log-updating")&&console.log(`Updating FLV2D: ${e}
  -> hasRenderer ${t}
  -> hasPendingCommand ${r}
  -> updatingRequiredFields ${o}
  -> updatingProxy ${p}
  -> updatingPipeline ${m}
`),e}};i=s([n("esri.views.2d.layers.SubtypeGroupLayerView2D")],i);const mi=i;export{mi as default};
