import{g_ as z,g$ as j,h0 as D,dC as L}from"./index-DtvgboMu.js";import{K as x,a as k,V as q}from"./CIMSymbolHelper-BrOZkvNR.js";import{i as A}from"./CIMResourceManager-DXjcscB8.js";import{t as F,l as K}from"./symbolUtils-D_RxykDS.js";import"./BidiEngine-BwB1Df7c.js";import"./fontUtils-C0MR3i-b.js";import"./OptimizedGeometry-DLPswkPy.js";import"./GeometryUtils-Ck5gdtfJ.js";import"./enums-BRqP_wXA.js";import"./definitions-ChNTV7Fi.js";import"./Rect-CUzevAry.js";import"./BoundingBox-C8300ugD.js";import"./imageUtils-D6Cj650o.js";import"./utils-DNpIbmoE.js";import"./utils-qvvZxNTp.js";import"./webStyleSymbolUtils-SuVqCzMo.js";import"./devEnvironmentUtils-Blrp8lZ5.js";const T=96/72;class U{constructor(i){this._spatialReference=i,this._imageDataCanvas=null,this._cimResourceManager=new A}get _canvas(){return this._imageDataCanvas||(this._imageDataCanvas=document.createElement("canvas")),this._imageDataCanvas}get resourceManager(){return this._cimResourceManager}async rasterizeCIMSymbolAsync(i,o,r,l,a,t,s,y,v){if(!i)return null;const{data:g}=i;if(!g||g.type!=="CIMSymbolReference"||!g.symbol)return null;const{symbol:C}=g;t||(t=z(C));const h=await j.resolveSymbolOverrides(g,o,this._spatialReference,a,t,s,y),d=this._cimResourceManager,p=[];x.fetchResources(h,d,p),x.fetchFonts(h,d,p),p.length>0&&await Promise.all(p);const{width:n,height:c}=r,M=G(t,n,c,l),e=x.getEnvelope(h,M,d);if(!e)return null;let m=1,R=0,I=0;switch(C.type){case"CIMPointSymbol":case"CIMTextSymbol":{let f=1;e.width>n&&(f=n/e.width);let b=1;e.height>c&&(b=c/e.height),l==="preview"&&(e.width<n&&(f=n/e.width),e.height<c&&(b=c/e.height)),m=Math.min(f,b),R=e.x+e.width/2,I=e.y+e.height/2}break;case"CIMLineSymbol":{(v||e.height>c)&&(m=c/e.height),I=e.y+e.height/2;const f=e.x*m+n/2,b=(e.x+e.width)*m+n/2,{paths:S}=M;S[0][0][0]-=f/m,S[0][2][0]-=(b-n)/m}break;case"CIMPolygonSymbol":{R=e.x+e.width/2,I=e.y+e.height/2;const f=e.x*m+n/2,b=(e.x+e.width)*m+n/2,S=e.y*m+c/2,$=(e.y+e.height)*m+c/2,{rings:w}=M;f<0&&(w[0][0][0]-=f,w[0][3][0]-=f,w[0][4][0]-=f),S<0&&(w[0][0][1]+=S,w[0][1][1]+=S,w[0][4][1]+=S),b>n&&(w[0][1][0]-=b-n,w[0][2][0]-=b-n),$>c&&(w[0][2][1]+=$-c,w[0][3][1]+=$-c)}}const E={type:"cim",data:{type:"CIMSymbolReference",symbol:h}};return this.rasterize(E,n,c,R,I,m,t,1,M)}rasterize(i,o,r,l,a,t,s,y=0,v=null){const{data:g}=i;if(!g||g.type!=="CIMSymbolReference"||!g.symbol)return null;const{symbol:C}=g,h=this._canvas,d=(window.devicePixelRatio||1)*T;h.width=o*d,h.height=r*d,s||(s=z(C)),v||(v=G(s,o,r,"legend")),h.width+=2*y,h.height+=2*y;const p=h.getContext("2d",{willReadFrequently:!0}),n=q.createIdentity();return n.translate(-l,-a),n.scale(t*d,-t*d),n.translate(o*d/2+y,r*d/2+y),p.clearRect(0,0,h.width,h.height),new k(p,this._cimResourceManager,n,!0).drawSymbol(C,v),p.getImageData(0,0,h.width,h.height)}}function G(u,i,o,r){const a=-i/2+1,t=i/2-1,s=o/2-1,y=-o/2+1;switch(u){case"esriGeometryPoint":return{x:0,y:0};case"esriGeometryPolyline":return{paths:[[[a,0],[0,0],[t,0]]]};default:return r==="legend"?{rings:[[[a,s],[t,0],[t,y],[a,y],[a,s]]]}:{rings:[[[a,s],[t,s],[t,y],[a,y],[a,s]]]}}}const _=new U(null),P=D(F.size),V=D(F.maxSize),O=D(F.lineWidth),W=1;async function B(u,i,o){const r=i==null?void 0:i.size;let l=r!=null&&typeof r=="object"&&"width"in r?r.width:r,a=r!=null&&typeof r=="object"&&"height"in r?r.height:r;if(l==null||a==null)if(o==="esriGeometryPolygon")l=P,a=P;else{const t=await H(u,i,o);t&&(l=t.width,a=t.height),o==="esriGeometryPolyline"&&(l=O),l=l!=null&&isFinite(l)?Math.min(l,V):P,a=a!=null&&isFinite(a)?Math.max(Math.min(a,V),W):P}return i.style==="legend"&&o==="esriGeometryPolyline"&&(l=O),{width:l,height:a}}async function H(u,i,o){const{feature:r,fieldMap:l,viewParams:a}=i.cimOptions||i,t=await j.resolveSymbolOverrides(u.data,r,null,l,o,null,a);if(!t)return null;(u=u.clone()).data={type:"CIMSymbolReference",symbol:t},u.data.primitiveOverrides=void 0;const s=[];return x.fetchResources(t,_.resourceManager,s),x.fetchFonts(t,_.resourceManager,s),s.length>0&&await Promise.all(s),x.getEnvelope(t,null,_.resourceManager)}async function me(u,i={}){var R;const{node:o,opacity:r,symbolConfig:l}=i,a=l!=null&&typeof l=="object"&&"isSquareFill"in l&&l.isSquareFill,t=i.cimOptions||i,s=t.geometryType||z((R=u==null?void 0:u.data)==null?void 0:R.symbol),y=await B(u,i,s),{feature:v,fieldMap:g}=t,C=a||s!=="esriGeometryPolygon"?"preview":"legend",h=await _.rasterizeCIMSymbolAsync(u,v,y,C,g,s,null,t.viewParams,t.allowScalingUp);if(!h)return null;const{width:d,height:p}=h,n=document.createElement("canvas");n.width=d,n.height=p,n.getContext("2d").putImageData(h,0,0);const c=L(y.width),M=L(y.height),e=new Image(c,M);e.src=n.toDataURL(),e.ariaLabel=i.ariaLabel??null,e.alt=i.ariaLabel??"",r!=null&&(e.style.opacity=`${r}`);let m=e;if(i.effectView!=null){const I={shape:{type:"image",x:0,y:0,width:c,height:M,src:e.src},fill:null,stroke:null,offset:[0,0]};m=K([[I]],[c,M],{effectView:i.effectView,ariaLabel:i.ariaLabel})}return o&&m&&o.appendChild(m),m}export{me as previewCIMSymbol};
